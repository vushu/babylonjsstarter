import { ImageMimeType } from "babylonjs-gltf2interface";
import { Nullable } from "@babylonjs/core/types";
import { Vector2 } from "@babylonjs/core/Maths/math";
import { BaseTexture } from "@babylonjs/core/Materials/Textures/baseTexture";
import { Texture } from "@babylonjs/core/Materials/Textures/texture";
import { Scene } from "@babylonjs/core/scene";
import { IGLTFExporterExtensionV2 } from "../glTFExporterExtension";
import { _Exporter } from "../glTFExporter";
import "../shaders/textureTransform.fragment";
/**
 * @hidden
 */
export declare class KHR_texture_transform implements IGLTFExporterExtensionV2 {
    /** Name of this extension */
    readonly name = "KHR_texture_transform";
    /** Defines whether this extension is enabled */
    enabled: boolean;
    /** Defines whether this extension is required */
    required: boolean;
    /** Reference to the glTF exporter */
    private _exporter;
    constructor(exporter: _Exporter);
    dispose(): void;
    preExportTextureAsync(context: string, babylonTexture: Texture, mimeType: ImageMimeType): Nullable<Promise<Texture>>;
    /**
     * Transform the babylon texture by the offset, rotation and scale parameters using a procedural texture
     * @param babylonTexture
     * @param offset
     * @param rotation
     * @param scale
     * @param scene
     */
    textureTransformTextureAsync(babylonTexture: Texture, offset: Vector2, rotation: number, scale: Vector2, scene: Scene): Promise<BaseTexture>;
}
